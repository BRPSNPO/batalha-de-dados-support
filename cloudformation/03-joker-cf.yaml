Description: 'This template is responsible to setup Thanos in your AWS account'

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SubnetId:
    Description: A valid subnet ID to provision your EC2
    Type: String
  VpcId:
    Description: VPC ID of the above subnet
    Type: String
  ImageId:
    Description: AMI ID to provision your EC2
    Type: String
    Default: ami-0533f2ba8a1995cf9
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  # IAM Role to give permission to SSM agent
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  RootInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref RootRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: c5a.xlarge # Mocked instance type with 16 vCPU and 64 GB of RAM
      SecurityGroupIds: [!GetAtt InstanceSecurityGroup.GroupId]
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'ImageId'
      SubnetId: !Ref 'SubnetId'
      IamInstanceProfile: !Ref 'RootInstanceProfile'
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda" # The name of the root volume will depends on OS
        Ebs:
          VolumeSize: 30
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cd /tmp
          sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          sudo systemctl enable amazon-ssm-agent
          sudo systemctl start amazon-ssm-agent
      Tags:
        - Key: "Name"
          Value: "Joker"
  
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
